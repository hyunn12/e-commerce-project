/**
 * Automatically generated by @grafana/openapi-to-k6: 0.3.2
 * Do not edit manually.
 * 이커머스 플랫폼 API
 * 쇼핑·주문·결제 기능을 제공하는 이커머스 플랫폼 API
 */
// @ts-ignore
import { URL } from "https://jslib.k6.io/url/1.0.0/index.js";

import http from "k6/http";
import type { Params, Response } from "k6/http";

import type { ComLoopersInterfacesApiApiResponseComLoopersInterfacesApiBrandBrandV1DtoBrandResponse } from "./api.schemas";

/**
 * This is the base client to use for interacting with the API.
 */
export class BrandV1ApiClient {
  private cleanBaseUrl: string;
  private commonRequestParameters: Params;

  constructor(clientOptions: {
    baseUrl: string;
    commonRequestParameters?: Params;
  }) {
    this.cleanBaseUrl = clientOptions.baseUrl.replace(/\/+$/, "");

    this.commonRequestParameters = clientOptions.commonRequestParameters || {};
  }

  /**
   * 브랜드 ID 로 브랜드 상세 정보 조회
   * @summary 브랜드 상세 조회
   */
  getDetail1(
    brandId: number,
    requestParameters?: Params,
  ): {
    response: Response;
    data: ComLoopersInterfacesApiApiResponseComLoopersInterfacesApiBrandBrandV1DtoBrandResponse;
  } {
    const url = new URL(this.cleanBaseUrl + `/api/v1/brands/${brandId}`);
    const mergedRequestParameters = this._mergeRequestParameters(
      requestParameters || {},
      this.commonRequestParameters,
    );
    const response = http.request(
      "GET",
      url.toString(),
      undefined,
      mergedRequestParameters,
    );
    let data;

    try {
      data = response.json();
    } catch {
      data = response.body;
    }
    return {
      response,
      data,
    };
  }

  /**
   * Merges the provided request parameters with default parameters for the client.
   *
   * @param {Params} requestParameters - The parameters provided specifically for the request
   * @param {Params} commonRequestParameters - Common parameters for all requests
   * @returns {Params} - The merged parameters
   */
  private _mergeRequestParameters(
    requestParameters?: Params,
    commonRequestParameters?: Params,
  ): Params {
    return {
      ...commonRequestParameters, // Default to common parameters
      ...requestParameters, // Override with request-specific parameters
      headers: {
        ...(commonRequestParameters?.headers || {}), // Ensure headers are defined
        ...(requestParameters?.headers || {}),
      },
      cookies: {
        ...(commonRequestParameters?.cookies || {}), // Ensure cookies are defined
        ...(requestParameters?.cookies || {}),
      },
      tags: {
        ...(commonRequestParameters?.tags || {}), // Ensure tags are defined
        ...(requestParameters?.tags || {}),
      },
    };
  }
}
